import Head from 'next/head'
import Image from 'next/image'
import styles from '../styles/Home.module.css'
import getCookie from '../lib/cookie.js'
import { useState, useEffect } from 'react'

export default function Home() {
  const [status, setStatus] = useState('loading');
  const [accessToken, setAccessToken] = useState('');
  const [userData, setUserData] = useState({});
  const [greeting, setGreeting] = useState('Hello');
  const [cardType, setCardType] = useState('');
  const [file, setFile] = useState(null);
  useEffect(() => {
    (async () => {
      let cookie = await fetch('/api/token').then(res => res.text());
      if (cookie) {
        setAccessToken(cookie);
        setStatus('authed');
        setUserData(await fetch('/api/me').then(res => res.json()));
      } else {
        setStatus('unauthed');
      }
    })();

    let myDate = new Date();
    let hrs = myDate.getHours();
    let greet;

    if (hrs < 12)
        greet = 'Good morning';
    else if (hrs >= 12 && hrs <= 17)
        greet = 'Good afternoon';
    else if (hrs >= 17 && hrs <= 24)
        greet = 'Good evening';
    setGreeting(greet);
  }, []);
  return (
    <div className={styles.container}>
      <Head>
        <title>Assemble Preflight</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="https://assemble.hackclub.com/invert.png" />
        <link rel="favicon" href="https://assemble.hackclub.com/invert.png" />
        <link rel="shortcut icon" href="https://assemble.hackclub.com/invert.png" />
      </Head>


      {status == 'authed' && <main className={styles.main}>
        <h1 className={styles.title}>
          Assemble Preflight
        </h1>

        <p className={styles.description}>
        ðŸ‘‹ {userData?.name?.split(' ')?.[0] ? `${greeting}, ${userData?.name?.split(' ')?.[0]}` : greeting}
        </p>

        <div className={styles.grid}>
          <a href="javascript:void 0;" className={styles.card} onClick={() => {
            setStatus('upload');
            setCardType('virtual');
          }}>
            <h2>Mobile &rarr;</h2>
            <p>I have a screenshot of my virtual card.</p>
          </a>
          <a href="javascript:void 0;" className={styles.card} onClick={() => {
            setStatus('upload');
            setCardType('physical');
          }}>
            <h2>Physical &rarr;</h2>
            <p>I have a picture of my physical card.</p>
          </a>
        </div>
      </main>}

      {status == 'upload' && <main className={styles.main}>
        <h1 className={styles.title}>
          Assemble Preflight
        </h1>

        <p className={styles.description}>
        Proof of {userData?.name?.split(' ')?.[0]}'s {cardType[0].toUpperCase() + cardType.substring(1)} Vaccine CardðŸ‘‹
        </p>
        
        <input type="file" accept="image/*" onChange={(e) => {
          setFile(e.target.files[0]);
        }} />

      </main>}

      {status == 'unauthed' && <main className={styles.main}>
        <h1 className={styles.title}>
          Assemble Preflight
        </h1>

        <div className={styles.grid}>
          <a href="/login" className={styles.card} style={{ minHeight: '250px' }}>
            <h2>Web &rarr;</h2>
            <p>Sign in to start the preflight & vaccine verification process in your browser.</p>
          </a>
          <a href="assembleticketing://checkin" className={styles.card} style={{ minHeight: '250px' }}>
            <h2>iOS App &rarr;</h2>
            <p>Download the iOS app for preflight, vaccine verification, and real-time event integration.</p>
          </a>
        </div>
      </main>}

      {(status == 'loading' || (
        status == 'authed' && Object.keys(userData).length == 0
      )) && <main className={styles.main}>
        <h1 className={styles.title}>
          Assemble Preflight
        </h1>

        <div className={styles.grid}>
          Please wait...
        </div>
      </main>}

      <footer className={styles.footer}>
        <span>
          Hack Club Assemble | Everything open source at{' '}
          <a
            href="https://github.com/hackclub/assemble"
            target="_blank"
            rel="noopener noreferrer"
            style={{ color: 'red' }}
          >
            hackclub/assemble
          </a>
        </span>
      </footer>
    </div>
  )
}
