import Head from 'next/head'
import Image from 'next/image'
import styles from '../styles/Home.module.css'
import getCookie from '../lib/cookie.js'
import { useState, useEffect } from 'react'
import { Box, Container, Heading } from 'theme-ui'

export default function Home() {
  const [status, setStatus] = useState('loading');
  const [accessToken, setAccessToken] = useState('');
  const [userData, setUserData] = useState({});
  const [greeting, setGreeting] = useState('Hello');
  const [cardType, setCardType] = useState('');
  const [file, setFile] = useState(null);
  useEffect(() => {
    (async () => {
      let cookie = await fetch('/api/token').then(res => res.text());
      if (cookie) {
        setAccessToken(cookie);
        setStatus('authed');
        setUserData(await fetch('/api/me').then(res => res.json()));
      } else {
        setStatus('unauthed');
      }
      console.log(qr);
    })();

    let myDate = new Date();
    let hrs = myDate.getHours();
    let greet;

    if (hrs < 12)
      greet = 'Good morning';
    else if (hrs >= 12 && hrs <= 17)
      greet = 'Good afternoon';
    else if (hrs >= 17 && hrs <= 24)
      greet = 'Good evening';
    setGreeting(greet);
  }, []);
  return (
    <div>
      <Head>
        <title>Assemble Preflight</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="https://assemble.hackclub.com/invert.png" />
        <link rel="favicon" href="https://assemble.hackclub.com/invert.png" />
        <link rel="shortcut icon" href="https://assemble.hackclub.com/invert.png" />
      </Head>
      <canvas id="canvas" width="0" height="0" style={{ display: 'none' }}></canvas>
      {status == 'authed' && <main>
        <Heading as="h1" mb={3}>
          Assemble Preflight & Ticketing
        </Heading>

        <p>
          ðŸ‘‹ {userData?.name?.split(' ')?.[0] ? `${greeting}, ${userData?.name?.split(' ')?.[0]}` : greeting}
        </p>

        <div>
          <a href="javascript:void 0;" onClick={() => {
            setStatus('upload');
            setCardType('virtual');
          }}>
            <h2>Mobile &rarr;</h2>
            <p>I have a screenshot of my virtual card.</p>
          </a>
          <a href="javascript:void 0;" onClick={() => {
            setStatus('upload');
            setCardType('physical');
          }}>
            <h2>Physical &rarr;</h2>
            <p>I have a picture of my physical card.</p>
          </a>
        </div>
      </main>}
      
      {status == 'error' && <main>
      <Heading as="h1" mb={3}>
          Assemble Preflight & Ticketing
        </Heading>

        <p>
        ðŸ›‘ Unexpected Error Occurred
        </p>

        <div>
          <a href="javascript:void 0;" onClick={() => {
            window.location.reload(true);
          }}>
            <h2>Restart &rarr;</h2>
            <p>Restart the vaccine verification process.</p>
          </a>
        </div>

          <p>Please report this error if it does not automatically resolve.</p>


      </main>}
      
      {status == 'uploaded' && <main>
      <Heading as="h1" mb={3}>
          Assemble Preflight & Ticketing
        </Heading>

        <p>
        Uploaded, page not complete
        </p>
      </main>}

      {status == 'upload' && <main>
      <Heading as="h1" mb={3}>
          Assemble Preflight & Ticketing
        </Heading>

        <p>
          Proof of {userData?.name?.split(' ')?.[0]}'s {cardType[0].toUpperCase() + cardType.substring(1)} Vaccine Card
        </p>

        <input type="file" accept="image/*" onChange={async (e) => {
          const file = e.target.files[0];
          const formData = new FormData();

          formData.append('data', file, 'assemble_web_' + file.name);
          formData.append('token', accessToken);

          const options = {
            method: 'POST',
            body: formData,
            // If you add this, upload won't work
            // headers: {
            //   'Content-Type': 'multipart/form-data',
            // }
          };
          await fetch('https://a9bc-73-25-196-61.ngrok.io/users', {
            method: 'GET',
            headers: {
              Authorization: `Bearer ${accessToken}`,
            }
          })
          fetch('https://api.yodacode.xyz/assemble/vaccines', options).then(res => res.text()).then(text => {
            if (text == 'OK') {
              setStatus('uploaded');
            } else {
              setStatus('error');
            }
          }).catch(() => {
            setStatus('error');
          });




        }} />

        <p>
          <a href="javascript:void 0;" style={{ color: '#fa4639' }}>
            Continue
          </a>
          {' | '}
          <a href="/" style={{ color: '#fa4639' }}>
            Restart
          </a>
        </p>

      </main>}

      {status == 'unauthed' && <Box bg="blue" py={3}><Container variant="copy" bg="white" >
      <Heading as="h1" mb={3}>
          Assemble Preflight & Ticketing
        </Heading>
        <Box bg="red" p={3} mb={3} sx={{ borderRadius: 3, color: 'white' }}>
          ðŸ‘‹ Hey there! We're super excited to be hosting you in San Francisco for
          Assemble 2022. Use this portal, or it's associated iOS app, to upload
          your proof of vaccination and your negative COVID-19 test (opens nearer 
          to the event). After both have been verified, you will be provided a ticket 
          with a barcode. Please screenshot this barcode or add it to Apple/Google Wallet 
          and then present it at the front door during checkin.
        </Box>
        <div>
          <Box bg="sunken" p={3} mb={3} as="a" href="/login" style={{ display: 'block', borderRadius: 3 }}>
            <Heading mb={2}>Web &rarr;</Heading>
            <Box>Sign in to start the preflight & vaccine verification process in your browser.</Box>
          </Box>
          <Box bg="sunken" p={3} mb={3} as="a" href="assembleticketing://checkin" style={{ display: 'block', bg: 'sunken', borderRadius: 3 }}>
            <Heading mb={2}>iOS App &rarr;</Heading>
            <Box>Download the iOS app for preflight, vaccine verification, and real-time event integration.</Box>
          </Box>
        </div>
      </Container></Box>}

      {(status == 'loading' || (
        status == 'authed' && Object.keys(userData).length == 0
      )) && <main>
          <h1>
            Assemble Preflight
          </h1>

          <div>
            Please wait...
          </div>
        </main>}
    </div>
  )
}
